// Code generated by goctl. DO NOT EDIT.
// Source: message.proto

package server

import (
	"context"

	"go-chat/app/message/rpc/internal/logic"
	"go-chat/app/message/rpc/internal/svc"
	"go-chat/app/message/rpc/message"
)

type MessageServer struct {
	svcCtx *svc.ServiceContext
	message.UnimplementedMessageServer
}

func NewMessageServer(svcCtx *svc.ServiceContext) *MessageServer {
	return &MessageServer{
		svcCtx: svcCtx,
	}
}

func (s *MessageServer) MessageHandler(ctx context.Context, in *message.MessageHandlerRequest) (*message.Empty, error) {
	l := logic.NewMessageHandlerLogic(ctx, s.svcCtx)
	return l.MessageHandler(in)
}

func (s *MessageServer) ReadHandler(ctx context.Context, in *message.ReadHandlerRequest) (*message.Empty, error) {
	l := logic.NewReadHandlerLogic(ctx, s.svcCtx)
	return l.ReadHandler(in)
}

func (s *MessageServer) WithdrawHandler(ctx context.Context, in *message.WithdrawHandlerRequest) (*message.Empty, error) {
	l := logic.NewWithdrawHandlerLogic(ctx, s.svcCtx)
	return l.WithdrawHandler(in)
}
